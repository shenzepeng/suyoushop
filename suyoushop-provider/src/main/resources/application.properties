# Spring boot application
spring.application.name=dubbo-auto-configuration-provider-demo
# Base packages to scan Dubbo Component: @org.apache.dubbo.config.annotation.Service
dubbo.scan.base-packages=com.kxg.suyoushop.provider.dubboservice
# Dubbo Application
## The default value of dubbo.application.name is ${spring.application.name}
dubbo.application.name=${spring.application.name}
# Dubbo Protocol
dubbo.protocol.name=dubbo
dubbo.protocol.port=-1
## Dubbo Registry
dubbo.registry.address=zookeeper://101.132.33.149:2181
#####################################
server.port=8081
#配置数据源
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
#mysql的驱动程序类
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
#mybatis配置
mybatis.type-aliases-package=com.kxg.suyoushop.provider.pojo
mybatis.mapper-locations=classpath:mapper/*.xml
#连接池配置
spring.datasource.url=jdbc:mysql://101.132.33.149:3306/suyoushop?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=123456
spring.datasource.dbcp2.min-idle=5
spring.datasource.dbcp2.initial-size=5
spring.datasource.dbcp2.max-idle=5
spring.datasource.dbcp2.max-wait-millis=200
#####################redis############################
#reids服务的ip地址
spring.redis.host=101.132.33.149
#redis服务的端口号
spring.redis.port=6379
#redis服务的密码
spring.redis.password=
#超时时间
spring.redis.timeout=300000
spring.redis.database=0
#####################elasticsearch########
spring.data.elasticsearch.cluster-name=my-application
spring.data.elasticsearch.cluster-nodes=http://www.shenzepengzuishuai.cn:9200/
#============== kafka ===================
# 指定kafka 代理地址，可以多个
spring.kafka.bootstrap-servers=129.211.72.78:9092
#=============== provider  =======================
# 指定消息key和消息体的编解码方式
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
#=============== consumer  =======================
# 指定默认消费者group id
spring.kafka.consumer.group-id=test-consumer-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.enable-auto-commit=true
spring.kafka.consumer.auto-commit-interval=100
# 指定消息key和消息体的编解码方式
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
